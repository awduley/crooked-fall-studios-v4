{"version":3,"sources":["scripts/vanilla-tilt.js"],"names":["VanillaTilt","element","settings","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","glare","isSettingTrue","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","updateInitialPosition","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListener","clearTimeout","cancelAnimationFrame","removeEventListeners","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","transform","perspective","resetGlare","glareElement","opacity","startX","startY","max","backupScale","scale","x","y","Math","min","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","getValues","axis","dispatchEvent","CustomEvent","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","innerWidth","documentElement","body","innerHeight","updateGlareSize","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","setting","elements","NodeList","slice","call","Array","forEach","init","querySelectorAll"],"mappings":"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","file":"vanilla-tilt.f9da9669.js","sourceRoot":"..\\src","sourcesContent":["var VanillaTilt = (function () {\r\n  'use strict';\r\n  \r\n  /**\r\n   * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\r\n   * Original idea: https://github.com/gijsroge/tilt.js\r\n   * MIT License.\r\n   * Version 1.7.0\r\n   */\r\n  \r\n  class VanillaTilt {\r\n    constructor(element, settings = {}) {\r\n      if (!(element instanceof Node)) {\r\n        throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n      }\r\n  \r\n      this.width = null;\r\n      this.height = null;\r\n      this.clientWidth = null;\r\n      this.clientHeight = null;\r\n      this.left = null;\r\n      this.top = null;\r\n  \r\n      // for Gyroscope sampling\r\n      this.gammazero = null;\r\n      this.betazero = null;\r\n      this.lastgammazero = null;\r\n      this.lastbetazero = null;\r\n  \r\n      this.transitionTimeout = null;\r\n      this.updateCall = null;\r\n      this.event = null;\r\n  \r\n      this.updateBind = this.update.bind(this);\r\n      this.resetBind = this.reset.bind(this);\r\n  \r\n      this.element = element;\r\n      this.settings = this.extendSettings(settings);\r\n  \r\n      this.reverse = this.settings.reverse ? -1 : 1;\r\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n      this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n      this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n  \r\n      this.elementListener = this.getElementListener();\r\n  \r\n      if (this.glare) {\r\n        this.prepareGlare();\r\n      }\r\n  \r\n      if (this.fullPageListening) {\r\n        this.updateClientSize();\r\n      }\r\n  \r\n      this.addEventListeners();\r\n      this.updateInitialPosition();\r\n    }\r\n  \r\n    static isSettingTrue(setting) {\r\n      return setting === \"\" || setting === true || setting === 1;\r\n    }\r\n  \r\n    /**\r\n     * Method returns element what will be listen mouse events\r\n     * @return {Node}\r\n     */\r\n    getElementListener() {\r\n      if (this.fullPageListening) {\r\n        return window.document;\r\n      }\r\n  \r\n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n        const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n  \r\n        if (mouseEventElement) {\r\n          return mouseEventElement;\r\n        }\r\n      }\r\n  \r\n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n        return this.settings[\"mouse-event-element\"];\r\n      }\r\n  \r\n      return this.element;\r\n    }\r\n  \r\n    /**\r\n     * Method set listen methods for this.elementListener\r\n     * @return {Node}\r\n     */\r\n    addEventListeners() {\r\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n  \r\n      this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n      this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n  \r\n      if (this.glare || this.fullPageListening) {\r\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n      }\r\n  \r\n      if (this.gyroscope) {\r\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * Method remove event listeners from current this.elementListener\r\n     */\r\n    removeEventListeners() {\r\n      this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n      this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n  \r\n      if (this.gyroscope) {\r\n        window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n      }\r\n  \r\n      if (this.glare || this.fullPageListening) {\r\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n      }\r\n    }\r\n  \r\n    destroy() {\r\n      clearTimeout(this.transitionTimeout);\r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n  \r\n      this.reset();\r\n  \r\n      this.removeEventListeners();\r\n      this.element.vanillaTilt = null;\r\n      delete this.element.vanillaTilt;\r\n  \r\n      this.element = null;\r\n    }\r\n  \r\n    onDeviceOrientation(event) {\r\n      if (event.gamma === null || event.beta === null) {\r\n        return;\r\n      }\r\n  \r\n      this.updateElementPosition();\r\n  \r\n      if (this.gyroscopeSamples > 0) {\r\n        this.lastgammazero = this.gammazero;\r\n        this.lastbetazero = this.betazero;\r\n  \r\n        if (this.gammazero === null) {\r\n          this.gammazero = event.gamma;\r\n          this.betazero = event.beta;\r\n        } else {\r\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n          this.betazero = (event.beta + this.lastbetazero) / 2;\r\n        }\r\n  \r\n        this.gyroscopeSamples -= 1;\r\n      }\r\n  \r\n      const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n      const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n  \r\n      const degreesPerPixelX = totalAngleX / this.width;\r\n      const degreesPerPixelY = totalAngleY / this.height;\r\n  \r\n      const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n      const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n  \r\n      const posX = angleX / degreesPerPixelX;\r\n      const posY = angleY / degreesPerPixelY;\r\n  \r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n  \r\n      this.event = {\r\n        clientX: posX + this.left,\r\n        clientY: posY + this.top,\r\n      };\r\n  \r\n      this.updateCall = requestAnimationFrame(this.updateBind);\r\n    }\r\n  \r\n    onMouseEnter() {\r\n      this.updateElementPosition();\r\n      this.element.style.willChange = \"transform\";\r\n      this.setTransition();\r\n    }\r\n  \r\n    onMouseMove(event) {\r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n  \r\n      this.event = event;\r\n      this.updateCall = requestAnimationFrame(this.updateBind);\r\n    }\r\n  \r\n    onMouseLeave() {\r\n      this.setTransition();\r\n  \r\n      if (this.settings.reset) {\r\n        requestAnimationFrame(this.resetBind);\r\n      }\r\n    }\r\n  \r\n    reset() {\r\n      this.event = {\r\n        clientX: this.left + this.width / 2,\r\n        clientY: this.top + this.height / 2\r\n      };\r\n  \r\n      if (this.element && this.element.style) {\r\n        this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n          `rotateX(0deg) ` +\r\n          `rotateY(0deg) ` +\r\n          `scale3d(1, 1, 1)`;\r\n      }\r\n  \r\n      this.resetGlare();\r\n    }\r\n  \r\n    resetGlare() {\r\n      if (this.glare) {\r\n        this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n        this.glareElement.style.opacity = \"0\";\r\n      }\r\n    }\r\n  \r\n    updateInitialPosition() {\r\n      if (this.settings.startX === 0 && this.settings.startY === 0) {\r\n        return;\r\n      }\r\n  \r\n      this.onMouseEnter();\r\n  \r\n      if (this.fullPageListening) {\r\n        this.event = {\r\n          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\r\n          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\r\n        };\r\n      } else {\r\n        this.event = {\r\n          clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\r\n          clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\r\n        };\r\n      }\r\n  \r\n  \r\n      let backupScale = this.settings.scale;\r\n      this.settings.scale = 1;\r\n      this.update();\r\n      this.settings.scale = backupScale;\r\n      this.resetGlare();\r\n    }\r\n  \r\n    getValues() {\r\n      let x, y;\r\n  \r\n      if (this.fullPageListening) {\r\n        x = this.event.clientX / this.clientWidth;\r\n        y = this.event.clientY / this.clientHeight;\r\n      } else {\r\n        x = (this.event.clientX - this.left) / this.width;\r\n        y = (this.event.clientY - this.top) / this.height;\r\n      }\r\n  \r\n      x = Math.min(Math.max(x, 0), 1);\r\n      y = Math.min(Math.max(y, 0), 1);\r\n  \r\n      let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\r\n      let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\r\n      let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n  \r\n      return {\r\n        tiltX: tiltX,\r\n        tiltY: tiltY,\r\n        percentageX: x * 100,\r\n        percentageY: y * 100,\r\n        angle: angle\r\n      };\r\n    }\r\n  \r\n    updateElementPosition() {\r\n      let rect = this.element.getBoundingClientRect();\r\n  \r\n      this.width = this.element.offsetWidth;\r\n      this.height = this.element.offsetHeight;\r\n      this.left = rect.left;\r\n      this.top = rect.top;\r\n    }\r\n  \r\n    update() {\r\n      let values = this.getValues();\r\n  \r\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n        \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n        \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n        \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n  \r\n      if (this.glare) {\r\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n        this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n      }\r\n  \r\n      this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n        \"detail\": values\r\n      }));\r\n  \r\n      this.updateCall = null;\r\n    }\r\n  \r\n    /**\r\n     * Appends the glare element (if glarePrerender equals false)\r\n     * and sets the default style\r\n     */\r\n    prepareGlare() {\r\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n      if (!this.glarePrerender) {\r\n        // Create glare element\r\n        const jsTiltGlare = document.createElement(\"div\");\r\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n  \r\n        const jsTiltGlareInner = document.createElement(\"div\");\r\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n  \r\n        jsTiltGlare.appendChild(jsTiltGlareInner);\r\n        this.element.appendChild(jsTiltGlare);\r\n      }\r\n  \r\n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n  \r\n      if (this.glarePrerender) {\r\n        return;\r\n      }\r\n  \r\n      Object.assign(this.glareElementWrapper.style, {\r\n        \"position\": \"absolute\",\r\n        \"top\": \"0\",\r\n        \"left\": \"0\",\r\n        \"width\": \"100%\",\r\n        \"height\": \"100%\",\r\n        \"overflow\": \"hidden\",\r\n        \"pointer-events\": \"none\"\r\n      });\r\n  \r\n      Object.assign(this.glareElement.style, {\r\n        \"position\": \"absolute\",\r\n        \"top\": \"50%\",\r\n        \"left\": \"50%\",\r\n        \"pointer-events\": \"none\",\r\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n        \"width\": `${this.element.offsetWidth * 2}px`,\r\n        \"height\": `${this.element.offsetWidth * 2}px`,\r\n        \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n        \"transform-origin\": \"0% 0%\",\r\n        \"opacity\": \"0\",\r\n      });\r\n    }\r\n  \r\n    updateGlareSize() {\r\n      if (this.glare) {\r\n        Object.assign(this.glareElement.style, {\r\n          \"width\": `${this.element.offsetWidth * 2}`,\r\n          \"height\": `${this.element.offsetWidth * 2}`,\r\n        });\r\n      }\r\n    }\r\n  \r\n    updateClientSize() {\r\n      this.clientWidth = window.innerWidth\r\n        || document.documentElement.clientWidth\r\n        || document.body.clientWidth;\r\n  \r\n      this.clientHeight = window.innerHeight\r\n        || document.documentElement.clientHeight\r\n        || document.body.clientHeight;\r\n    }\r\n  \r\n    onWindowResize() {\r\n      this.updateGlareSize();\r\n      this.updateClientSize();\r\n    }\r\n  \r\n    setTransition() {\r\n      clearTimeout(this.transitionTimeout);\r\n      this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n      if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n  \r\n      this.transitionTimeout = setTimeout(() => {\r\n        this.element.style.transition = \"\";\r\n        if (this.glare) {\r\n          this.glareElement.style.transition = \"\";\r\n        }\r\n      }, this.settings.speed);\r\n  \r\n    }\r\n  \r\n    /**\r\n     * Method return patched settings of instance\r\n     * @param {boolean} settings.reverse - reverse the tilt direction\r\n     * @param {number} settings.max - max tilt rotation (degrees)\r\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n     * @param {string} settings.easing - Easing on enter/exit\r\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n     * @param {number} settings.speed - Speed of the enter/exit transition\r\n     * @param {boolean} settings.transition - Set a transition on enter/exit\r\n     * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n     * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n     */\r\n    extendSettings(settings) {\r\n      let defaultSettings = {\r\n        reverse: false,\r\n        max: 15,\r\n        startX: 0,\r\n        startY: 0,\r\n        perspective: 1000,\r\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n        scale: 1,\r\n        speed: 300,\r\n        transition: true,\r\n        axis: null,\r\n        glare: false,\r\n        \"max-glare\": 1,\r\n        \"glare-prerender\": false,\r\n        \"full-page-listening\": false,\r\n        \"mouse-event-element\": null,\r\n        reset: true,\r\n        gyroscope: true,\r\n        gyroscopeMinAngleX: -45,\r\n        gyroscopeMaxAngleX: 45,\r\n        gyroscopeMinAngleY: -45,\r\n        gyroscopeMaxAngleY: 45,\r\n        gyroscopeSamples: 10\r\n      };\r\n  \r\n      let newSettings = {};\r\n      for (var property in defaultSettings) {\r\n        if (property in settings) {\r\n          newSettings[property] = settings[property];\r\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n          try {\r\n            newSettings[property] = JSON.parse(attribute);\r\n          } catch (e) {\r\n            newSettings[property] = attribute;\r\n          }\r\n  \r\n        } else {\r\n          newSettings[property] = defaultSettings[property];\r\n        }\r\n      }\r\n  \r\n      return newSettings;\r\n    }\r\n  \r\n    static init(elements, settings) {\r\n      if (elements instanceof Node) {\r\n        elements = [elements];\r\n      }\r\n  \r\n      if (elements instanceof NodeList) {\r\n        elements = [].slice.call(elements);\r\n      }\r\n  \r\n      if (!(elements instanceof Array)) {\r\n        return;\r\n      }\r\n  \r\n      elements.forEach((element) => {\r\n        if (!(\"vanillaTilt\" in element)) {\r\n          element.vanillaTilt = new VanillaTilt(element, settings);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  if (typeof document !== \"undefined\") {\r\n    /* expose the class to window */\r\n    window.VanillaTilt = VanillaTilt;\r\n  \r\n    /**\r\n     * Auto load\r\n     */\r\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n  }\r\n  \r\n  return VanillaTilt;\r\n  \r\n  }());"]}